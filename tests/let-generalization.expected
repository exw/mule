
Desugared:

	let f = fn x. x in
	_.a:=_ (_.b:=_ {} (f ((fn x. Ok x) {}))) (f fn y. y)

inferred type:

	{a : a -> a, b : Ok {} | ...b}

Runtime term:

	(fn. (fn. fn. v1 where { a = v0 }) ((fn. fn. v1 where { b = v0 }) {} (v0 ((fn. Ok v0) {}))) (v0 fn. v0)) fn. v0

Evaluated:

	{a = fn. v0, b = Ok {}}
