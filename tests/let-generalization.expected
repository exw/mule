
Desugared:

	(let (f (fix/let (fn f (fn x x))))
	 (fix/record
	  (fn $0 (((.= a) (((.= b) {}) (f ((fn x (Ok x)) {})))) (f (fn y y))))))

inferred type:

	(all a
	 (all b
	  (all c
	   (all d
	    (record (types (...d))
	     (values
	      ((a (c -> c))
	       (b (union ((Ok (record (types (...b)) (values ()))) ...a))))))))))

Runtime term:

	(App
	 ((Lam
	   (0 ()
	    (App
	     ((Fix Record)
	      (Lam
	       (1 ()
	        (Record
	         ((a (App ((Var 1) (Lam (0 () (Var 0))))))
	          (b
	           (App
	            ((Var 1) (App ((Lam (0 () (Ctor (Ok (Var 0))))) (Record ()))))))))))))))
	  (App ((Fix Let) (Lam (0 () (Lam (0 () (Var 0)))))))))

Evaluated:

	(Record ((a (Lam (0 () (Var 0)))) (b (Ctor (Ok (Record ()))))))
