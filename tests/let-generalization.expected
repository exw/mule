
Desugared:

	let f = fn x. x in _ where { a = _ } (_ where { b = _ } {} (f ((fn x. Ok x) {}))) (f fn y. y)

inferred type:

	{a : a -> a, b : Ok {} | ...b}

Runtime term:

	(fn f. (fn $152. fn $153. $152 where { a = $153 }) ((fn $150. fn $151. $150 where { b = $151 }) {} (f ((fn x. Ok x) {}))) (f fn y. y)) fn x. x

Evaluated:

	{a = fn y. y, b = Ok {}}
