
Desugared:

	let f = fix/let fn f. fn x. x in
	fix/record fn $0. _.a:=_ (_.b:=_ {} (f ((fn x. Ok x) {}))) (f fn y. y)

inferred type:

	{a : a -> a, b : Ok {} | ...b}

Runtime term:

	(fn. fix/record fn. {a = v1 fn. v0, b = v1 ((fn. Ok v0) {})}) (fix/let fn. fn. v0)

Evaluated:

	{a = fn. v0, b = Ok {}}
