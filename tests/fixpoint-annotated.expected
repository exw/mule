
Desugared:

	match-lam
| $0 -> let fix = (_ : all a. all b. ((a -> b) -> a -> b) -> a -> b) $0 in fix
end fn f. let g = fn x. f fn v. x x v in g g

inferred type:

	((a -> b) -> a -> b) -> a -> b

Runtime term:

	match _ with  | _ -> fn $0. (fn fix. fix) $0 end fn f. (fn g. g g) fn x. f fn v. x x v

Evaluated:

	fn f. (fn g. g g) fn x. f fn v. x x v
