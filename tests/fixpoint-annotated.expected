
Desugared:

	(let
	 (fix
	  (fix/let
	   (fn fix
	    ((: (all a (all b (((a -> b) -> (a -> b)) -> (a -> b)))))
	     (fn f (let (g (fix/let (fn g (fn x (f (fn v ((x x) v))))))) (g g)))))))
	 fix)

inferred type:

	(all a (all b (((b -> a) -> (b -> a)) -> (b -> a))))

Runtime term:

	(App
	 ((Lam (0 () (Var 0)))
	  (App
	   ((Fix Let)
	    (Lam
	     (2 ()
	      (Lam
	       (2 ()
	        (App
	         ((Lam (0 () (App ((Var 0) (Var 0)))))
	          (App
	           ((Fix Let)
	            (Lam
	             (2 ()
	              (Lam
	               (2 ()
	                (App
	                 ((Var 2)
	                  (Lam (1 () (App ((App ((Var 1) (Var 1))) (Var 0)))))))))))))))))))))))

Evaluated:

	(Lam
	 (0
	  ((Lazy
	    (()
	     (App
	      ((Fix Let)
	       (Lam
	        (0 ()
	         (Lam
	          (2 ()
	           (App
	            ((Lam (0 () (App ((Var 0) (Var 0)))))
	             (App
	              ((Fix Let)
	               (Lam
	                (2 ()
	                 (Lam
	                  (2 ()
	                   (App
	                    ((Var 2)
	                     (Lam (1 () (App ((App ((Var 1) (Var 1))) (Var 0))))))))))))))))))))))))
	  (App
	   ((Lam (0 () (App ((Var 0) (Var 0)))))
	    (App
	     ((Fix Let)
	      (Lam
	       (2 ()
	        (Lam
	         (2 ()
	          (App
	           ((Var 2) (Lam (1 () (App ((App ((Var 1) (Var 1))) (Var 0)))))))))))))))))
