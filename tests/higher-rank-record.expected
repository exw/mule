
Desugared:

	(let (r (fix/let (fn r (fix/record (fn $1 (((.= y) {}) (fn x x)))))))
	 (let (f (fix/let (fn f ((: (all a (a -> a))) ((. y) r)))))
	  (fix/record (fn $0 (((.= l) (((.= k) {}) (f (fn z z)))) (f {}))))))

inferred type:

	(all a
	 (all b
	  (all c
	   (record (types (...c))
	    (values ((k (a -> a)) (l (record (types (...b)) (values ())))))))))

Runtime term:

	(App
	 ((Lam
	   (1 ()
	    (App
	     ((Lam
	       (0 ()
	        (App
	         ((Fix Record)
	          (Lam
	           (1 ()
	            (Record
	             ((k (App ((Var 1) (Lam (0 () (Var 0))))))
	              (l (App ((Var 1) (Record ()))))))))))))
	      (App ((Fix Let) (Lam (1 () (App ((GetField (Strict y)) (Var 1)))))))))))
	  (App
	   ((Fix Let)
	    (Lam
	     (-1 ()
	      (App ((Fix Record) (Lam (0 () (Record ((y (Lam (0 () (Var 0))))))))))))))))

Evaluated:

	(Record ((k (Lam (0 () (Var 0)))) (l (Record ()))))
