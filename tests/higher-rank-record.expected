
Desugared:

	let r = _ where { y = _ } {} fn x. x in match-lam
| $0 -> let f = (_ : all a. a -> a) $0 in _ where { l = _ } (_ where { k = _ } {} (f fn z. z)) (f {})
end (_.y r)

inferred type:

	{k : a -> a, l : {}}

Runtime term:

	(fn r. match _ with  | _ -> fn $0. (fn f. (fn $228. fn $229. $228 where { l = $229 }) ((fn $226. fn $227. $226 where { k = $227 }) {} (f fn z. z)) (f {})) $0 end (_.y r)) ((fn $224. fn $225. $224 where { y = $225 }) {} fn x. x)

Evaluated:

	{k = fn z. z, l = {}}
