
Desugared:

	fn $0. let choice = (_ : all a. a -> a -> a) $0 in
	       fix/record fn $1. _.x:=_ (_.y:=_ {} (choice fn x. x fn x. x)) (choice {} {})

inferred type:

	(a -> a -> a) -> {x : {}, y : b -> b}

Runtime term:

	fn. (fn. fix/record fn. {x = v1 {} {}, y = v1 fn. v0 fn. v0}) v0

Evaluated:

	fn. (fn. fix/record fn. {x = v1 {} {}, y = v1 fn. v0 fn. v0}) v0
