
Desugared:

	(let (f (fix/let (fn f (fn x ((. y) x)))))
	 (fix/record
	  (fn $0
	   (((.= a)
	     (((.= b) {})
	      (f
	       (fix/record
	        (fn $1 (((.= y) {}) (fix/record (fn $2 (((.= z) {}) {})))))))))
	    (f (fix/record (fn $3 (((.= y) {}) {}))))))))

inferred type:

	(all a
	 (all b
	  (all c
	   (all d
	    (record (types (...d))
	     (values
	      ((a (record (types (...c)) (values ())))
	       (b
	        (record (types (...b))
	         (values ((z (record (types (...a)) (values ()))))))))))))))

Runtime term:

	(App
	 ((Lam
	   (0 ()
	    (App
	     ((Fix Record)
	      (Lam
	       (1 ()
	        (Record
	         ((a
	           (App
	            ((Var 1)
	             (App ((Fix Record) (Lam (0 () (Record ((y (Record ())))))))))))
	          (b
	           (App
	            ((Var 1)
	             (App
	              ((Fix Record)
	               (Lam
	                (0 ()
	                 (Record
	                  ((y
	                    (App
	                     ((Fix Record) (Lam (0 () (Record ((z (Record ()))))))))))))))))))))))))))
	  (App
	   ((Fix Let)
	    (Lam (0 () (Lam (0 () (App ((GetField (Strict y)) (Var 0)))))))))))

Evaluated:

	(Record ((a (Record ())) (b (Record ((z (Record ())))))))
