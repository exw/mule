
Desugared:

	let f = fix/let fn f. fn x. _.y x in
	fix/record fn $0. _.a:=_ (_.b:=_ {} (f (fix/record fn $2. _.y:=_ {} (fix/record fn $3. _.z:=_ {} {})))) (f (fix/record fn $1. _.y:=_ {} {}))

inferred type:

	{a : {}, b : {z : {}}}

Runtime term:

	(fn. fix/record fn. {a = v1 (fix/record fn. {y = {}}), b = v1 (fix/record fn. {y = fix/record fn. {z = {}}})}) (fix/let fn. fn. _.y v0)

Evaluated:

	{a = {}, b = {z = {}}}
